### This file was generated by Nexus Schema
### Do not make changes to this file directly


type Account {
  access_token: String
  createdAt: DateTime!
  expires_at: Int
  id_token: String
  provider: String
  providerAccountId: String
  refresh_token: String
  scope: String
  session_state: String
  token_type: String
  type: String
  updatedAt: DateTime!
  user: User
  userId: String
}

type Authenticator {
  counter: Int
  createdAt: DateTime!
  credentialBackedUp: Boolean
  credentialDeviceType: String
  credentialID: String
  credentialPublicKey: String
  providerAccountId: String
  transports: String
  updatedAt: DateTime!
  user: User
  userId: String
}

type Category {
  id: ID
  name: String
  posts: [Post!]!
}

type Comment {
  content: String
  createdAt: DateTime!
  id: ID
  post: Post
  postId: String
  updatedAt: DateTime!
  user: User
  userId: String
}

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type Like {
  createdAt: DateTime!
  id: ID
  post: Post
  postId: String
  user: User
  userId: String
}

type Mutation {
  createPost(authorId: String!, categories: [String!]!, content: String!, thumbnail: String, title: String!): Post
}

type Post {
  author: User
  authorId: String
  categories: [Category!]!
  comments: [Comment!]!
  content: String
  createdAt: DateTime!
  id: ID
  likes: [Like!]
  thumbnail: String
  title: String
  updatedAt: DateTime!
}

type Query {
  categories: [Category!]!
  feedPosts(category: String, orderBy: SortOrder = desc, searchString: String, userId: String!): [Post!]!
  post(id: String): Post
  posts: [Post!]!
  user(userId: String): User
  users: [User!]!
}

type Session {
  createdAt: DateTime!
  expires: DateTime!
  sessionToken: String
  updatedAt: DateTime!
  user: User
  userId: String
}

enum SortOrder {
  asc
  desc
}

type User {
  accounts: [Account!]
  authenticators: [Authenticator!]
  comments: [Comment!]
  createdAt: DateTime!
  email: String
  emailVerified: DateTime
  id: ID
  image: String
  likes: [Like!]
  name: String
  posts: [Post!]
  sessions: [Session!]
  updatedAt: DateTime!
}

type VerificationToken {
  expires: DateTime!
  identifier: String
  token: String
}