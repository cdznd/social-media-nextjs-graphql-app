/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */


import type { Context } from "./../../prisma/context"
import type { core } from "nexus"
declare global {
  interface NexusGenCustomInputMethods<TypeName extends string> {
    /**
     * A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    DateTime<FieldName extends string>(fieldName: FieldName, opts?: core.CommonInputFieldConfig<TypeName, FieldName>): void // "DateTime";
  }
}
declare global {
  interface NexusGenCustomOutputMethods<TypeName extends string> {
    /**
     * A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
     */
    DateTime<FieldName extends string>(fieldName: FieldName, ...opts: core.ScalarOutSpread<TypeName, FieldName>): void // "DateTime";
  }
}


declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
}

export interface NexusGenEnums {
  SortOrder: "asc" | "desc"
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  DateTime: any
}

export interface NexusGenObjects {
  Account: { // root type
    access_token?: string | null; // String
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    expires_at?: number | null; // Int
    id_token?: string | null; // String
    provider?: string | null; // String
    providerAccountId?: string | null; // String
    refresh_token?: string | null; // String
    scope?: string | null; // String
    session_state?: string | null; // String
    token_type?: string | null; // String
    type?: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    user?: NexusGenRootTypes['User'] | null; // User
    userId?: string | null; // String
  }
  Authenticator: { // root type
    counter?: number | null; // Int
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    credentialBackedUp?: boolean | null; // Boolean
    credentialDeviceType?: string | null; // String
    credentialID?: string | null; // String
    credentialPublicKey?: string | null; // String
    providerAccountId?: string | null; // String
    transports?: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    user?: NexusGenRootTypes['User'] | null; // User
    userId?: string | null; // String
  }
  Category: { // root type
    id?: string | null; // ID
    name?: string | null; // String
  }
  Comment: { // root type
    content?: string | null; // String
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id?: string | null; // ID
    post?: NexusGenRootTypes['Post'] | null; // Post
    postId?: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    user?: NexusGenRootTypes['User'] | null; // User
    userId?: string | null; // String
  }
  Like: { // root type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id?: string | null; // ID
    post?: NexusGenRootTypes['Post'] | null; // Post
    postId?: string | null; // String
    user?: NexusGenRootTypes['User'] | null; // User
    userId?: string | null; // String
  }
  Post: { // root type
    author?: NexusGenRootTypes['User'] | null; // User
    authorId?: string | null; // String
    content?: string | null; // String
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id?: string | null; // ID
    thumbnail?: string | null; // String
    title?: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  Query: {};
  Session: { // root type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    expires: NexusGenScalars['DateTime']; // DateTime!
    sessionToken?: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    user?: NexusGenRootTypes['User'] | null; // User
    userId?: string | null; // String
  }
  User: { // root type
    accounts?: NexusGenRootTypes['Account'][] | null; // [Account!]
    authenticators?: NexusGenRootTypes['Authenticator'][] | null; // [Authenticator!]
    comments?: NexusGenRootTypes['Comment'][] | null; // [Comment!]
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    email?: string | null; // String
    emailVerified?: NexusGenScalars['DateTime'] | null; // DateTime
    id?: string | null; // ID
    image?: string | null; // String
    likes?: NexusGenRootTypes['Like'][] | null; // [Like!]
    name?: string | null; // String
    posts?: NexusGenRootTypes['Post'][] | null; // [Post!]
    sessions?: NexusGenRootTypes['Session'][] | null; // [Session!]
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  VerificationToken: { // root type
    expires: NexusGenScalars['DateTime']; // DateTime!
    identifier?: string | null; // String
    token?: string | null; // String
  }
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars & NexusGenEnums

export interface NexusGenFieldTypes {
  Account: { // field return type
    access_token: string | null; // String
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    expires_at: number | null; // Int
    id_token: string | null; // String
    provider: string | null; // String
    providerAccountId: string | null; // String
    refresh_token: string | null; // String
    scope: string | null; // String
    session_state: string | null; // String
    token_type: string | null; // String
    type: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    user: NexusGenRootTypes['User'] | null; // User
    userId: string | null; // String
  }
  Authenticator: { // field return type
    counter: number | null; // Int
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    credentialBackedUp: boolean | null; // Boolean
    credentialDeviceType: string | null; // String
    credentialID: string | null; // String
    credentialPublicKey: string | null; // String
    providerAccountId: string | null; // String
    transports: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    user: NexusGenRootTypes['User'] | null; // User
    userId: string | null; // String
  }
  Category: { // field return type
    id: string | null; // ID
    name: string | null; // String
    posts: NexusGenRootTypes['Post'][]; // [Post!]!
  }
  Comment: { // field return type
    content: string | null; // String
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string | null; // ID
    post: NexusGenRootTypes['Post'] | null; // Post
    postId: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    user: NexusGenRootTypes['User'] | null; // User
    userId: string | null; // String
  }
  Like: { // field return type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string | null; // ID
    post: NexusGenRootTypes['Post'] | null; // Post
    postId: string | null; // String
    user: NexusGenRootTypes['User'] | null; // User
    userId: string | null; // String
  }
  Post: { // field return type
    author: NexusGenRootTypes['User'] | null; // User
    authorId: string | null; // String
    categories: NexusGenRootTypes['Category'][]; // [Category!]!
    comments: NexusGenRootTypes['Comment'][]; // [Comment!]!
    content: string | null; // String
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: string | null; // ID
    likes: NexusGenRootTypes['Like'][] | null; // [Like!]
    thumbnail: string | null; // String
    title: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  Query: { // field return type
    categories: NexusGenRootTypes['Category'][]; // [Category!]!
    feedPosts: NexusGenRootTypes['Post'][]; // [Post!]!
    post: NexusGenRootTypes['Post'] | null; // Post
    posts: NexusGenRootTypes['Post'][]; // [Post!]!
    user: NexusGenRootTypes['User'] | null; // User
    users: NexusGenRootTypes['User'][]; // [User!]!
  }
  Session: { // field return type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    expires: NexusGenScalars['DateTime']; // DateTime!
    sessionToken: string | null; // String
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
    user: NexusGenRootTypes['User'] | null; // User
    userId: string | null; // String
  }
  User: { // field return type
    accounts: NexusGenRootTypes['Account'][] | null; // [Account!]
    authenticators: NexusGenRootTypes['Authenticator'][] | null; // [Authenticator!]
    comments: NexusGenRootTypes['Comment'][] | null; // [Comment!]
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    email: string | null; // String
    emailVerified: NexusGenScalars['DateTime'] | null; // DateTime
    id: string | null; // ID
    image: string | null; // String
    likes: NexusGenRootTypes['Like'][] | null; // [Like!]
    name: string | null; // String
    posts: NexusGenRootTypes['Post'][] | null; // [Post!]
    sessions: NexusGenRootTypes['Session'][] | null; // [Session!]
    updatedAt: NexusGenScalars['DateTime']; // DateTime!
  }
  VerificationToken: { // field return type
    expires: NexusGenScalars['DateTime']; // DateTime!
    identifier: string | null; // String
    token: string | null; // String
  }
}

export interface NexusGenFieldTypeNames {
  Account: { // field return type name
    access_token: 'String'
    createdAt: 'DateTime'
    expires_at: 'Int'
    id_token: 'String'
    provider: 'String'
    providerAccountId: 'String'
    refresh_token: 'String'
    scope: 'String'
    session_state: 'String'
    token_type: 'String'
    type: 'String'
    updatedAt: 'DateTime'
    user: 'User'
    userId: 'String'
  }
  Authenticator: { // field return type name
    counter: 'Int'
    createdAt: 'DateTime'
    credentialBackedUp: 'Boolean'
    credentialDeviceType: 'String'
    credentialID: 'String'
    credentialPublicKey: 'String'
    providerAccountId: 'String'
    transports: 'String'
    updatedAt: 'DateTime'
    user: 'User'
    userId: 'String'
  }
  Category: { // field return type name
    id: 'ID'
    name: 'String'
    posts: 'Post'
  }
  Comment: { // field return type name
    content: 'String'
    createdAt: 'DateTime'
    id: 'ID'
    post: 'Post'
    postId: 'String'
    updatedAt: 'DateTime'
    user: 'User'
    userId: 'String'
  }
  Like: { // field return type name
    createdAt: 'DateTime'
    id: 'ID'
    post: 'Post'
    postId: 'String'
    user: 'User'
    userId: 'String'
  }
  Post: { // field return type name
    author: 'User'
    authorId: 'String'
    categories: 'Category'
    comments: 'Comment'
    content: 'String'
    createdAt: 'DateTime'
    id: 'ID'
    likes: 'Like'
    thumbnail: 'String'
    title: 'String'
    updatedAt: 'DateTime'
  }
  Query: { // field return type name
    categories: 'Category'
    feedPosts: 'Post'
    post: 'Post'
    posts: 'Post'
    user: 'User'
    users: 'User'
  }
  Session: { // field return type name
    createdAt: 'DateTime'
    expires: 'DateTime'
    sessionToken: 'String'
    updatedAt: 'DateTime'
    user: 'User'
    userId: 'String'
  }
  User: { // field return type name
    accounts: 'Account'
    authenticators: 'Authenticator'
    comments: 'Comment'
    createdAt: 'DateTime'
    email: 'String'
    emailVerified: 'DateTime'
    id: 'ID'
    image: 'String'
    likes: 'Like'
    name: 'String'
    posts: 'Post'
    sessions: 'Session'
    updatedAt: 'DateTime'
  }
  VerificationToken: { // field return type name
    expires: 'DateTime'
    identifier: 'String'
    token: 'String'
  }
}

export interface NexusGenArgTypes {
  Query: {
    feedPosts: { // args
      category?: string | null; // String
      orderBy: NexusGenEnums['SortOrder'] | null; // SortOrder
      searchString?: string | null; // String
      userId: string; // String!
    }
    post: { // args
      id?: string | null; // String
    }
    user: { // args
      userId?: string | null; // String
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = never;

export type NexusGenEnumNames = keyof NexusGenEnums;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: Context;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginInputFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
  }
}